syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.particlefilter";
option java_outer_classname = "ParticleFilterProto";

package particlefilterclasses;

// Python :
//      python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. particlefilterclasses/particlefilter.proto
// Go :
//      protoc -I particlefilterclasses/ particlefilterclasses/particlefilter.proto --go_out=plugins=grpc:particlefilterclasses

service ParticleFilter {

    // Initialization
    rpc Initialize (InitRequest) returns (InitReply) {
    }

    // Predict
    rpc Predict (PredictRequest) returns (PredictReply) {
    }

    // Update
    rpc Update (UpdateRequest) returns (UpdateReply) {
    }
}

// Initialization:
message InitRequest {
    string name = 1;
}
message InitReply {
    bool returnValue = 1;
}

// Predict:
message PredictRequest {
    string state = 1;
}
message PredictReply {
    string resXY = 1;
    bool returnValue = 2;
}

// Update:
message UpdateRequest {
    string state = 1;
    string WiFiPredict = 2;
}
message UpdateReply {
    string resXY = 1;
    bool returnValue = 2;
}
