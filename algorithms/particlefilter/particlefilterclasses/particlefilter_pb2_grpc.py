# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from particlefilterclasses import particlefilter_pb2 as particlefilterclasses_dot_particlefilter__pb2


class ParticleFilterStub(object):
    """Python :
    python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. particlefilterclasses/particlefilter.proto
    Go :
    protoc -I particlefilterclasses/ particlefilterclasses/particlefilter.proto --go_out=plugins=grpc:particlefilterclasses

    """

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.Initialize = channel.unary_unary(
            '/particlefilterclasses.ParticleFilter/Initialize',
            request_serializer=particlefilterclasses_dot_particlefilter__pb2.InitRequest.SerializeToString,
            response_deserializer=particlefilterclasses_dot_particlefilter__pb2.InitReply.FromString,
        )
        self.Predict = channel.unary_unary(
            '/particlefilterclasses.ParticleFilter/Predict',
            request_serializer=particlefilterclasses_dot_particlefilter__pb2.PredictRequest.SerializeToString,
            response_deserializer=particlefilterclasses_dot_particlefilter__pb2.PredictReply.FromString,
        )
        self.Update = channel.unary_unary(
            '/particlefilterclasses.ParticleFilter/Update',
            request_serializer=particlefilterclasses_dot_particlefilter__pb2.UpdateRequest.SerializeToString,
            response_deserializer=particlefilterclasses_dot_particlefilter__pb2.UpdateReply.FromString,
        )


class ParticleFilterServicer(object):
    """Python :
    python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. particlefilterclasses/particlefilter.proto
    Go :
    protoc -I particlefilterclasses/ particlefilterclasses/particlefilter.proto --go_out=plugins=grpc:particlefilterclasses

    """

    def Initialize(self, request, context):
        """Initialization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Predict(self, request, context):
        """Predict
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Update
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ParticleFilterServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Initialize': grpc.unary_unary_rpc_method_handler(
            servicer.Initialize,
            request_deserializer=particlefilterclasses_dot_particlefilter__pb2.InitRequest.FromString,
            response_serializer=particlefilterclasses_dot_particlefilter__pb2.InitReply.SerializeToString,
        ),
        'Predict': grpc.unary_unary_rpc_method_handler(
            servicer.Predict,
            request_deserializer=particlefilterclasses_dot_particlefilter__pb2.PredictRequest.FromString,
            response_serializer=particlefilterclasses_dot_particlefilter__pb2.PredictReply.SerializeToString,
        ),
        'Update': grpc.unary_unary_rpc_method_handler(
            servicer.Update,
            request_deserializer=particlefilterclasses_dot_particlefilter__pb2.UpdateRequest.FromString,
            response_serializer=particlefilterclasses_dot_particlefilter__pb2.UpdateReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'particlefilterclasses.ParticleFilter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
