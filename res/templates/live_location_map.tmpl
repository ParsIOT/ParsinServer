<!DOCTYPE html>
<html>

<head>
    <meta charset=utf-8/>
    <title>PARSIN</title>
    <link rel="shortcut icon" sizes="16x16 24x24 32x32 48x48 64x64" href="/static/img/favicon.ico"/>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'/>

    <!-- Bootstrap and JQuery JS -->
    <script src="/static/js/jquery-2.0.0.min.js"></script>
    <script src='/static/js/bootstrap.js'></script>

    <!-- Bootstrap Core CSS -->
    <link href="/static/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="/static/css/2-col-portfolio.css" rel="stylesheet">
    <link href="/static/css/custom.css" rel="stylesheet">


    <link href="/static/css/leaflet.css" rel="stylesheet">
    <link href="/static/css/leaflet.usermarker.css" rel="stylesheet">
    <script src='/static/js/leaflet.js'></script>
    <script src='/static/js/leaflet.usermarker.js'></script>
    <script src='/static/js/Leaflet.Marker.SlideTo.js'></script>
    <script src="/static/js/sweetalert.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/static/css/sweetalert.css">
    <link href="/static/css/sweetalert2.css" rel="stylesheet"/>
    <script src="/static/js/sweetalert2.js"></script>

    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="/static/css/font-awesome.min.css">
    <style>
        #live-map {
            height: 500px;
        }

        #live-users-table-container {
            overflow: scroll;
        }
    </style>
</head>

<body>

{{ template "navbar" . }}

<!-- Page Content -->
<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12">
            <h2 class="page-header">Live Location Map
                <small>view users on map</small>
            </h2>
        </div>
    </div>

    <!--<div class="well">-->
    <div class="row">
        <div class="col-md-9 col-sm-12">
            <div class="panel panel-primary" id="map-panel">
                <div class="panel-heading">
                    Map
                </div>
                <div class="panel-body">
                    <div id="live-map"></div>

                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-12">
            <div class="panel panel-success" id="users-list-panel">
                <div class="panel-heading">
                    Users
                </div>
                <div class="panel-body" id="live-users-table-container">
                    <div class="bs-callout bs-callout-info row" style="margin: 0 0 15px;">
                        <div class="col-md-12">
                            <a href="#location-mode" data-toggle="collapse"><h4 style="text-decoration: underline;">
                                Location mode</h4></a>
                            <div id="location-mode" class="collapse">
                                <label class="radio">
                                    <input type="radio" name="locMode" value="pdrMode" checked>PDR Location
                                </label>
                                <label class="radio">
                                    <input type="radio" name="locMode" value="fpMode">Fingerprint Location
                                </label>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <hr/>
                        </div>

                        <div class="col-md-12">
                            <a href="#filter-users" data-toggle="collapse"><h4 style="text-decoration: underline;">Filter Users</h4></a>
                            <div id="filter-users" class="collapse">
                                <div class="form-group">
                                    <label for="refresh-interval">Enter user to filter</label>
                                    <input id="filter-user" class="form-control" placeholder="user to filter"/>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <button onclick="filterUsers()" class="btn btn-success btn-sm btn-block">Filter</button>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <button onclick="clearFilter()" class="btn btn-warning btn-sm btn-block">Clear Filter</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <hr/>
                        </div>
                        <div class="col-md-12">
                            <a href="#auto-refresh" data-toggle="collapse"><h4 style="text-decoration: underline;">Auto Refresh</h4></a>
                            <div id="auto-refresh" class="collapse">

                                <div class="form-group">
                                    <label><input id="auto-reload" type="checkbox"/> Enable Auto reload</label>
                                </div>
                                <div class="form-group">
                                    <label for="refresh-interval">Interval (milliseconds)</label>
                                    <input id="refresh-interval" type="number" min="300" step="100" value="2000"
                                           class="form-control" disabled/>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <hr/>
                        </div>
                        <div class="col-md-12">
                            <button onclick="deleteResults()" class="btn btn-warning btn-sm btn-block">Delete user
                                history
                            </button>
                        </div>
                    </div>
                    <table id="live-users-table"
                           class="table table-responsive table-hover table-condensed table-bordered">
                        <thead>
                        <tr>
                            <td>User</td>
                            <td>X</td>
                            <td>Y</td>
                        </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!--</div>-->


</div>

<script type="application/javascript">
    var filter_user = false;
    var reloadDataInterval;
    $('#live-map').css('height', $(window.top).height() - 275);
    $('#live-users-table-container').css('height', $(window.top).height() - 245);
    var map = L.map('live-map', {
        crs: L.CRS.Simple,
        minZoom: -100,
//        maxZoom: 4
    });
   var bounds = [[-1*('{{.MapHeight}}'/2),-1*('{{.MapWidth}}'/2)], [('{{.MapHeight}}'/2),('{{.MapWidth}}'/2)]];
    //    var bounds = [[-400, -300], [400, 300]];
    var image = L.imageOverlay('{{.MapPath}}', bounds).addTo(map);
    map.setView([0, 0], -2);

    var markers = {};
    var pattern = /([\d.-]*)[\s]*,[\s]*([\d.-]*)/;

    //    var marker = L.userMarker([0, 0], {pulsing: true, accuracy: 100, smallIcon: true});
    //    marker.addTo(map);

    updateUsersLocation();

    function updateUsersLocation() {
        console.info("Loading");
        user = $('#filter-user').val();
        clearInterval(reloadDataInterval);
        $('.bs-callout').removeClass('bs-callout-info bs-callout-success').addClass('bs-callout-danger')
        $.getJSON("/location?group={{ .Group }}" + ((user != "") ? "&user=" + user : ""), function (data) {
            var items = [];
            $.each(data.users, function (key, val) {

                let locMode = $('input[name=locMode]:checked').val();
                let location = "";
                if (locMode == "fpMode") {
                    location = val[0].location;
                } else if (locMode == "pdrMode") {
                    location = val[0].pdrlocation;
                }

                let match = pattern.exec(location);
                if (match && match[1] && match[2]) {
                    if (filter_user != false) {
                        if (filter_user == key) {
                            items.push("<tr class='bg-info'><td>" + key + "</td><td>" + match[1] + "</td><td>" + match[2] + "</td></tr>");
                            createMarker(key, match);
                        } else {
                            items.push("<tr><td>" + key + "</td><td>" + match[1] + "</td><td>" + match[2] + "</td></tr>");
                        }
                    } else {
                        items.push("<tr><td>" + key + "</td><td>" + match[1] + "</td><td>" + match[2] + "</td></tr>");
                        createMarker(key, match);
                    }
                } else {
                    if (filter_user != false && filter_user == key)
                        items.push("<tr class='bg-info'><td>" + key + "</td><td colspan='2' class='text-center'> NO DATA </td></tr>");
                    else
                        items.push("<tr><td>" + key + "</td><td colspan='2' class='text-center'> NO DATA </td></tr>");
                }
            });
            $("#live-users-table").find("tbody").remove();
            $("<tbody/>", {
                "class": "tab-content",
                html: items.join("")
            }).appendTo("#live-users-table");
            console.info("done");
            setTimeout(function () {
                $('.bs-callout').removeClass('bs-callout-danger').addClass('bs-callout-success')
                if ($('#auto-reload').is(':checked')) {
                    resetDataLoadInterval()
                }
            }, 200);
        });
    }

    $('#auto-reload').change(function () {
        if (this.checked) {
            $('#refresh-interval').prop('disabled', false);
            resetDataLoadInterval();
        } else {
            clearInterval(reloadDataInterval);
            $('#refresh-interval').prop('disabled', true);
        }
    });

    $('#refresh-interval').change("change", function () {
        resetDataLoadInterval();
    });

    function resetDataLoadInterval(interval = null) {
        clearInterval(reloadDataInterval);
        if (interval) {
            reloadDataInterval = setInterval(updateUsersLocation, interval);
            return
        }
        let v = parseInt($('#refresh-interval').val());
        let m = parseInt($('#refresh-interval').prop('min'));
        if (m < v) {
            reloadDataInterval = setInterval(updateUsersLocation, v);
        } else {
            reloadDataInterval = setInterval(updateUsersLocation, m);
        }
    }

    function filterUsers() {
        filter_user = $('#filter-user').val();
        for (var marker in markers) {
            if (marker != filter_user) {
                console.log(marker);
                map.removeLayer(markers[marker]);
                delete markers[marker];
            }
        }
        updateUsersLocation();
    }

    function clearFilter() {
        filter_user = false;
        updateUsersLocation();
    }


    function deleteResults() {
        user = $('#filter-user').val();
        if (user.length === 0) {
            return;
        }
        swal2({
            title: "Delete User history",
            text: "Are you sure you want to delete " + user + " history",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel pls!",
            closeOnConfirm: false,
            closeOnCancel: false
        }).then(function (is_checked) {
            var req = $.ajax({
                method: "DELETE",
                url: "/delresults?group={{ .Group }}&user=" + user,
            });
            req.done(function (data) {
                console.log(data)
                swal("Deleted!", data['message'], "success");
                location.reload();
            });
            req.fail(function (data) {
                swal("Sorry", data['message'], "error");
            });
        }, function (stat) {
            swal2("Cancelled", "Your data is safe :)", "error");
        });
    }

    /*  function deleteResults() {

          $.getJSON("/delresults?group={{ .Group }}&user="+user, function (data) {

            $.each(data.locations, function (key, val) {
                let match = pattern.exec(key);
                if (match) {
                    // items.push("<tr><td>" + match[1] + "</td><td>" + match[2] + "</td><td>" + val.accuracy + "</td><td>" + val.count + "</td></tr>");

                    L.userMarker([match[1], match[2]], {
//                    pulsing: true,
//                    accuracy: 200,
                        title: key,
                        smallIcon: true
                    }).bindPopup("<b>" + match[1] + "," + match[2] + "</b>").addTo(locationMarkers);
                }
            });
            locationMarkers.addTo(map);
            locationMarkers.eachLayer(function (marker) {
                marker.on('click', function (e) {
                    $('#locName').val((e.target.getLatLng().lat).toString() + ".0" + "," + (e.target.getLatLng().lng).toString() + ".0");
                    UpdateTraceMap();
                });

            });
        });
    }*/

    function createMarker(key, match) {
        if (key in markers) {
            markers[key].slideTo([match[1], match[2]], {
                duration: 1000,
                keepAtCenter: false
            });
        } else {
            markers[key] = L.userMarker([match[1], match[2]], {
//                    pulsing: true,
//                    accuracy: 200,
                title: key,
                smallIcon: true
            }).bindPopup("<b>" + key + "</b><br>" + match[1]
                    + "," + match[2]).addTo(map);

        }
    }
</script>
</body>

</html>
